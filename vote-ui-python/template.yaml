apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: vote-frontend-python
  title: Python UI frontend for the Vote App
  description: Creates the frontend for the Vote App in Python with Tekton Pipelines and Argo CD Applications
  tags:
    - python
    - frontend
    - tekton
    - argo
    - vote
spec:
  owner: rhdh
  type: service
  parameters:
    - title: Provide Information for Application
      required:
        - component_id
        - cluster_id
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          default: vote-ui
          ui:field: EntityNamePicker
          maxLength: 16
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
          default: Creates the frontend for the Vote App in Python with Tekton Pipelines and Argo CD Applications
        cluster_id:
          title: Cluster Id
          type: string
          description: Id of the cluster
          default: .apps.cluster-6t96w.sandbox908.opentlc.com
    - title: Provide Image Registry Information
      required:
        - image_host
        - image_tag
      properties:
        image_host:
          title: Image Host
          type: string
          description: Host for storing image
          default: image-registry.openshift-image-registry.svc:5000
        image_tag:
          title: Image Tag
          default: latest
          type: string
          description: Build Image tag

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          component_id: {{ ' ${{  parameters.component_id }}' }}-{{ ' ${{  user.entity.metadata.name }}' }}
          description: {{ ' ${{  parameters.description }}' }}
          namespace: vote-app-dev-{{ ' ${{  user.entity.metadata.name }}' }}
          owner: {{ ' ${{  user.entity.metadata.name }}' }}
          cluster: {{ ' ${{  parameters.cluster_id }}' }}
          host: gitlab-gitlab.apps.cluster-6t96w.sandbox908.opentlc.com
          destination: {{ ' ${{  user.entity.metadata.name }}' }}/{{ ' ${{  parameters.component_id }}' }}
          quay_destination: {{ ' ${{  parameters.image_organization}}/${{ parameters.component_id }}' }}
          port: 8080
          user: {{ ' ${{  user.entity.metadata.name }}' }}

    - id: publish
      name: Publish
      action: publish:gitlab
      input:
        repoUrl: "gitlab-gitlab.apps.cluster-6t96w.sandbox908.opentlc.com?owner={{ ' ${{  user.entity.metadata.name }}' }}&repo=${{parameters.component_id}}"
        repoVisibility: public

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: {{ ' ${{  steps.publish.output.repoContentsUrl }}' }}
        catalogInfoPath: "/catalog-info.yaml"

    - id: template-gitops-deployment
      name: Generating Deployment Resources
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          component_id: {{ ' ${{  parameters.component_id }}' }}-{{ ' ${{  user.entity.metadata.name }}' }}
          description: {{ ' ${{  parameters.description }}' }}
          destination: https://gitlab-gitlab.apps.cluster-6t96w.sandbox908.opentlc.com/{{ ' ${{  user.entity.metadata.name }}' }}/${{parameters.component_id}}-gitops.git
          source_repository: https://gitlab-gitlab.apps.cluster-6t96w.sandbox908.opentlc.com/{{ ' ${{  user.entity.metadata.name }}' }}/${{parameters.component_id}}.git
          repository_name: ${{parameters.component_id}}
          git_owner: {{ ' ${{  user.entity.metadata.name }}' }}
          cluster: {{ ' ${{  parameters.cluster_id }}' }}
          namespace: vote-app-dev-{{ ' ${{  user.entity.metadata.name }}' }}
          image_registry: {{ ' ${{  parameters.image_registry }}' }}
          image_host: {{ ' ${{  parameters.image_host }}' }}
          image_organization: {{ ' ${{  parameters.image_organization }}' }}
          image_name: {{ ' ${{  parameters.component_id }}' }}
          image_tag: {{ ' ${{  parameters.image_tag }}' }}
          port: 8080
          repository_host: gitlab-gitlab.apps.cluster-6t96w.sandbox908.opentlc.com
          deployment_name: vote-ui
          user: {{ ' ${{  user.entity.metadata.name }}' }}
        targetPath: ./tenant-gitops

    - id: publish-gitops
      name: Publishing to Resource Repository
      action: publish:gitlab
      input:
        repoUrl: "gitlab-gitlab.apps.cluster-6t96w.sandbox908.opentlc.com?owner={{ ' ${{  user.entity.metadata.name }}' }}&repo=${{parameters.component_id}}-gitops"
        title: gitops resources for {{ ' ${{  parameters.component_id }}' }}
        description: gitops resources for {{ ' ${{  parameters.component_id }}' }}
        sourcePath: ./tenant-gitops
        repoVisibility: public

    - id: create-argocd-resources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: {{ ' ${{  parameters.component_id }}' }}-{{ ' ${{  user.entity.metadata.name }}' }}-bootstrap
        argoInstance: main
        namespace: janus-argocd
        repoUrl: https://gitlab-gitlab.apps.cluster-6t96w.sandbox908.opentlc.com/{{ ' ${{  user.entity.metadata.name }}' }}/{{ ' ${{  parameters.component_id }}' }}-gitops.git
        path: 'argocd/'

  output:
    links:
      - title: Source Code Repository
        url: {{ ' ${{  steps.publish.output.remoteUrl }}' }}
      - title: Open Component in catalog
        icon: catalog
        entityRef: {{ ' ${{  steps.register.output.entityRef }}' }}
